#!/usr/bin/env ruby
require_relative 'moodledocker-common.rb'
require 'fileutils'
require 'erb'

def start_behat(name)
  if !MoodleDocker.name_valid? (name)
    return false
  end

  if !MoodleDocker.project_exists?(name)
    puts "  Error: Project directory \"#{name}\" does not exist."
    return false
  end
  puts "Checking if seleniumserver is running"
  seleniumserver = `docker ps -f name=seleniumserver -q`
  if (seleniumserver.strip == "")
    seleniumserver= `docker ps -a -f name=seleniumserver -q`
    if (seleniumserver.strip == "")
      puts "There is no container with name seleniumserver"
      puts "Make sure you downloaded the correct container and execute something like:"
	    puts "docker run --name seleniumserver -d -p 4444:4444 selenium/standalone-chrome:3"
	    return false
    else
      print "Starting selenium server"
      `docker start seleniumserver`
      puts " ... done"
    end
  end

  puts "Behat environment will be running soon"
  puts "If you haven't done so yet, please init the behat site using:"
  puts "  moodledocker exec php admin/tool/behat/cli/init.php"
  puts "Your can run tests using something like:"
  puts "  moodledocker exec vendor/bin/behat --config /var/moodledata/behat/behatrun/behat/behat.yml --tags \"@yourplugin\""

  phpcontainername = "#{name.gsub("_","_")}_php_1"
  puts "Starting webserver within #{phpcontainername}"
  system "docker exec -it #{phpcontainername} bash -c 'php -S 0.0.0.0:80 -t /var/www/public'"
  puts ' ... stopped'
  puts "Behat environment has stopped. Selenium is still running; execute `docker stop seleniumserver' to end it."
  
  return true
end


if ARGV.length != 1 then
  puts "Usage: moodledocker-startbehat NAME"
  exit
end

if !start_behat(ARGV[0]) then
  exit!
end

